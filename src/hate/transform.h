#include "math.h"

namespace hate {
	/**
	 * A transform handles the position and
	 * orientation of an object in one neat
	 * construct. This is later sent into 
	 * OpenGL via a matrix generated by 
	 * this class. This is handled for you.
	 */
	class Transform {
		public:
			Vec3 p;
			Vec3 s = Vec3(1, 1, 1);
			Quat o;

			Transform();
			Transform(Vec3 _position, Vec3 _scale, Quat _orientation);

			/**
			 * Returns this transform as a matrix, 
			 * which can be easily applied.
			 */
			Mat4 getMat();

			/**
			 * Moves the object by this many units.
			 *
			 * @param x the delta position in x.
			 * @param y the delta position in y.
			 * @param z the delta position in z.
			 */
			void move(float x, float y = 0, float z = 0);
			void move(Vec3 delta);

			/**
			 * Scales each component of the vector
			 * individually.
			 *
			 * @param x the scale to scale x with.
			 * @param y the scale to scale y with.
			 * @param z the scale to scale z with.
			 */
			void scale(float x, float y = 1, float z = 1);
			void scale(Vec3 _scale);

			/**
			 * Rotates the object around its own origin
			 * along the axis specified.
			 *
			 * @param angle the angle to rotate by (radians).
			 */
			void rotateX(float angle);
			void rotateY(float angle);
			void rotateZ(float angle);
	};
}
